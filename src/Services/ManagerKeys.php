<?php

namespace Mink67\KafkaConnect\Services;

use Mink67\KafkaConnect\Db\Db;

/**
 * Perment de crÃ©er un un kafka connect
 */
class ManagerKeys {

    /**
     * @var Db
     */
    private $db;


    /**
     * 
     */
    public function __construct(Db $db) {
        $this->db = $db;
    }
    /**
     * 
     */
    private function createKeys()
    {
        // Public and private keys are expected to be Base64 encoded. The last
        // non-empty line is used so that keys can be generated with
        // sodium_crypto_sign_keypair(). The secret keys generated by other tools may
        // need to be adjusted to match the input expected by libsodium.
        
        $keyPair = sodium_crypto_sign_keypair();
        
        $privateKey = base64_encode(sodium_crypto_sign_secretkey($keyPair));
        
        $publicKey = base64_encode(sodium_crypto_sign_publickey($keyPair));

        $this->db->setParam("privateKey", $privateKey)
                ->setParam("publicKey", $publicKey);
        
    }

    /**
     * 
     */
    public function getPrivateKey()
    {
        $key = $this->db->getClearValue("privateKey");

        if (is_null($key)) {
            $this->createKeys();
            $key = $this->db->getClearValue("privateKey");
        }

        return $key;
    }
    /**
     * 
     */
    public function getPublicKey()
    {
        $key = $this->db->getClearValue("publicKey");

        if (is_null($key)) {
            $this->createKeys();
            $key = $this->db->getClearValue("publicKey");
        }

        return $key;
    }
}